<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
 	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver">
		</property>
		<property name="url" value="jdbc:mysql://localhost:3306/h_test">
		</property>
		<property name="username" value="h_test"></property>
		<property name="password" value="123"></property>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/shop/vo/User.hbm.xml</value>
				<value>com/shop/vo/Commodity.hbm.xml</value></list>
		</property>
	</bean>
	
	<bean id="UserDAO" class="com.shop.dao.UserDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	<bean id="CommodityDAO" class="com.shop.dao.CommodityDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="UserService" class="com.shop.service.impl.UserService">
		<!-- <constructor-arg>
			<ref bean="UserDAO" />
		</constructor-arg> -->
		<property name="userDao" ref="UserDAO"></property>
	</bean>
	<bean id="CommodityService" class="com.shop.service.impl.CommodityService">
		<property name="commodityDAO" ref="CommodityDAO"></property>
	</bean>
	
	<bean id="ServiceManager" class = "com.shop.service.impl.ServiceManager">
		<property name="userService" ref="UserService"></property>
		<property name="commodityService" ref="CommodityService"></property>
	</bean>
	
	<bean id="LoginAction" class = "com.shop.action.LoginAction">
		<!-- <property name="serviceManager" ref="ServiceManager"></property> -->
	</bean>
	<bean id="RegistAction" class = "com.shop.action.RegistAction">
	</bean>
	<bean id="HomeAction" class="com.shop.action.HomeAction">
		<!-- <property name="serviceManager">
			<ref bean="ServiceManager"/>
		</property> -->
	</bean>
	
	
	<bean id="txManager"
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
           <!--  注入applicationContext.xml中配置的sessionFactory -->
            <ref bean="sessionFactory" />
        </property>
    </bean>
    
	<tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="login" propagation="REQUIRED" />
            <tx:method name="sava*" propagation="REQUIRED" />
            <tx:method name="*" propagation="REQUIRED"/>
          <!--   对其他方法的配置      read-only="" -->
            <tx:method name="*" propagation="SUPPORTS" read-only="false" />
        </tx:attributes>
    </tx:advice>
	   <!--  将事务通知和切入点组合 -->
    <aop:config>
        <aop:pointcut expression="execution(* com.shop.dao.*.*(..))" id="pc" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pc" />
    </aop:config>

	
	<!-- <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	
	 <bean id="transactionInterceptor" 
        class="org.springframework.transaction.interceptor.TransactionInterceptor"> 
        <property name="transactionManager" ref="transactionManager" /> 
        配置事务属性 
        <property name="transactionAttributes"> 
            <props> 
                <prop key="*">PROPAGATION_REQUIRED</prop> 
            </props> 
        </property> 
    </bean>
    
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator"> 
        <property name="beanNames"> 
            <list> 
                <value>*DAO</value>
            </list> 
        </property> 
        <property name="interceptorNames"> 
            <list> 
                <value>transactionInterceptor</value> 
            </list> 
        </property> 
    </bean>
    -->
	</beans>